services:
  # ---------------------- #
  #  üó∫Ô∏è  PostGIS Database  #
  # ---------------------- #
  db:
    image: postgis/postgis:16-3.4
    platform: linux/amd64
    container_name: geooptima-db
    environment:
      POSTGRES_USER: geo
      POSTGRES_PASSWORD: geo
      POSTGRES_DB: geodb
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./db-init.sql:/docker-entrypoint-initdb.d/db-init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U geo"]
      interval: 5s
      retries: 10
      start_period: 10s

  # ---------------------- #
  #  ‚öôÔ∏è  Python API Layer  #
  # ---------------------- #
  api:
    build:
      context: ./backend
    container_name: geooptima-api
    environment:
      DATABASE_URL: postgresql+psycopg2://geo:geo@db:5432/geodb
      PYTHONUNBUFFERED: "1"
    volumes:
      - ./backend:/app
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"

  # ---------------------- #
  #  üíæ  PgAdmin UI       #
  # ---------------------- #
  pgadmin:
    image: dpage/pgadmin4:9.8
    container_name: geooptima-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  # ---------------------- #
  #  üó∫Ô∏è  OSM Importer     #
  # ---------------------- #
  osm2pgsql:
    build:
      context: .
      dockerfile: osm2pgsql.Dockerfile
    container_name: geooptima-osm-importer
    volumes:
      - ./data:/data
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGPASSWORD: geo
    entrypoint: ["/bin/sh", "-c"]
    command: ["sleep infinity"]

  # ---------------------- #
  #  üåê  Next.js Frontend  #
  # ---------------------- #
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: geooptima-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
    depends_on:
      - api
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  dbdata:
  pgadmin-data:
